digraph "ReferencedObject"
{
  edge [fontname="FreeSans.ttf",fontsize="10",labelfontname="FreeSans.ttf",labelfontsize="10"];
  node [fontname="FreeSans.ttf",fontsize="10",shape=record];
  Node0 [label="{ReferencedObject\n|# reference_type_uri\l|+ ReferencedObject()\l+ ReferencedObject()\l+ ReferencedObject()\l+ ReferencedObject()\l+ create()\l+ set()\l+ set()\l+ add()\l+ add()\l+ operator[]()\l+ addReference()\l+ setReference()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans.ttf"];
  Node1 [label="{URIProperty\n||+ URIProperty()\l+ URIProperty()\l+ URIProperty()\l+ URIProperty()\l+ get()\l+ getAll()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsbol_1_1_u_r_i_property.html",tooltip="A URIProperty may contain a restricted type of string that conforms to the specification for a Unifor..."];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="FreeSans.ttf"];
  Node2 [label="{Property\< std::string \>\n|+ python_iter\l# type\l# sbol_owner\l# lowerBound\l# upperBound\l# validationRules\l|+ Property()\l+ Property()\l+ Property()\l+ Property()\l+ ~Property()\l+ getTypeURI()\l+ getOwner()\l+ set()\l+ set()\l+ set()\land 15 more...\l# isHidden()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classsbol_1_1_property.html"];
}
