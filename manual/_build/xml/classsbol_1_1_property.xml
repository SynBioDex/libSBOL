<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classsbol_1_1_property" kind="class" language="C++" prot="public">
    <compoundname>sbol::Property</compoundname>
    <includes local="no">/Users/bryan/Dev/libSBOL/source/property.h</includes>
    <innerclass refid="classsbol_1_1_property_1_1iterator" prot="public">sbol::Property::iterator</innerclass>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>LiteralType</declname>
        <defname>LiteralType</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classsbol_1_1_property_1ae7eb33d1cf22577923b7872fad0d72a2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class SBOLObject</definition>
        <argsstring></argsstring>
        <name>SBOLObject</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="59" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="59" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classsbol_1_1_property_1a905a73fd092fbf7ef93bba047e081418" prot="protected" static="no" mutable="no">
        <type><ref refid="property_8h_1addc3413015529a8d51e055f32748821f" kindref="member">sbol_type</ref></type>
        <definition>sbol_type type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="62" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsbol_1_1_property_1afd14d27b979a91307d8548061c1ed76b" prot="protected" static="no" mutable="no">
        <type><ref refid="classsbol_1_1_s_b_o_l_object" kindref="compound">SBOLObject</ref> *</type>
        <definition>SBOLObject* sbol_owner</definition>
        <argsstring></argsstring>
        <name>sbol_owner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="63" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="63" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsbol_1_1_property_1a6f819250a5965723e1f8110140a7ddeb" prot="protected" static="no" mutable="no">
        <type>ValidationRules</type>
        <definition>ValidationRules validationRules</definition>
        <argsstring></argsstring>
        <name>validationRules</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="64" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classsbol_1_1_property_1a4fe7ea5f74433d397de3b2d5c0f145b9" prot="public" static="no" mutable="no">
        <type>std::vector&lt; std::string &gt;::<ref refid="classsbol_1_1_property_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>std::vector&lt;std::string&gt;::iterator python_iter</definition>
        <argsstring></argsstring>
        <name>python_iter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="126" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classsbol_1_1_property_1a8eabfd241d9b1e0acf2db965f872d64f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void initializeNamespace</definition>
        <argsstring>(std::string ns)</argsstring>
        <name>initializeNamespace</name>
        <param>
          <type>std::string</type>
          <declname>ns</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="65" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/object.h" bodystart="180" bodyend="183"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsbol_1_1_property_1ad8f40b0d120f2c860386c286f2f598d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Property</definition>
        <argsstring>(sbol_type type_uri, void *property_owner, std::string initial_value, ValidationRules validation_rules={})</argsstring>
        <name>Property</name>
        <param>
          <type><ref refid="property_8h_1addc3413015529a8d51e055f32748821f" kindref="member">sbol_type</ref></type>
          <declname>type_uri</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>property_owner</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>initial_value</declname>
        </param>
        <param>
          <type>ValidationRules</type>
          <declname>validation_rules</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type_uri</parametername>
</parameternamelist>
<parameterdescription>
<para>An RDF hash URI for this property, consisting of a namespace followed by an identifier. For example, Properties of SBOLObjects use URIs of the form <ulink url="http://sbols.org/v2#somePropertyName,">http://sbols.org/v2#somePropertyName,</ulink> where the identifier somePropertyName determines the appearance of XML nodes in an SBOL file. Alternatively, annotations in a custom namespace can be provided using a similarly formed hash URI in another namespace. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>property_owner</parametername>
</parameternamelist>
<parameterdescription>
<para>All <ref refid="classsbol_1_1_property" kindref="compound">Property</ref> objects must have a pointer back to its parent <ref refid="classsbol_1_1_s_b_o_l_object" kindref="compound">SBOLObject</ref> of which it is a member </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>initial_value</parametername>
</parameternamelist>
<parameterdescription>
<para>The initial value of the <ref refid="classsbol_1_1_property" kindref="compound">Property</ref> </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>validation_rules</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of externally defined ValidationRules. The vector contains pointers to functions which correspond to the validation rules listed in the appendix of the formal SBOL specification document. ValidationRules are automatically checked every time a setter or adder method is called and when Documents are read and written. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="67" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="137" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classsbol_1_1_property_1a472abfcc949da4aa54ffd6b030ff2438" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Property</definition>
        <argsstring>(sbol_type type_uri, void *property_owner, int initial_value, ValidationRules validation_rules={})</argsstring>
        <name>Property</name>
        <param>
          <type><ref refid="property_8h_1addc3413015529a8d51e055f32748821f" kindref="member">sbol_type</ref></type>
          <declname>type_uri</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>property_owner</declname>
        </param>
        <param>
          <type>int</type>
          <declname>initial_value</declname>
        </param>
        <param>
          <type>ValidationRules</type>
          <declname>validation_rules</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="69" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="153" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classsbol_1_1_property_1a0f46d656d5f53af3bf202e1b8756cd0a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Property</definition>
        <argsstring>(sbol_type type_uri=UNDEFINED, void *property_owner=NULL, ValidationRules validation_rules={})</argsstring>
        <name>Property</name>
        <param>
          <type><ref refid="property_8h_1addc3413015529a8d51e055f32748821f" kindref="member">sbol_type</ref></type>
          <declname>type_uri</declname>
          <defval>UNDEFINED</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>property_owner</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>ValidationRules</type>
          <declname>validation_rules</declname>
          <defval>{}</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="71" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="71" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classsbol_1_1_property_1aa22be1d5ed856a436d84b3d4b4cb5c8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>~Property</definition>
        <argsstring>()</argsstring>
        <name>~Property</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="77" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classsbol_1_1_property_1aaeae46cf11cccb87655dc22526bacf3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="property_8h_1addc3413015529a8d51e055f32748821f" kindref="member">sbol_type</ref></type>
        <definition>sbol_type getTypeURI</definition>
        <argsstring>()</argsstring>
        <name>getTypeURI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="78" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="176" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classsbol_1_1_property_1a536f61dd346bda796d4b3fc116037490" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classsbol_1_1_s_b_o_l_object" kindref="compound">SBOLObject</ref> &amp;</type>
        <definition>SBOLObject &amp; getOwner</definition>
        <argsstring>()</argsstring>
        <name>getOwner</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="79" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="182" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classsbol_1_1_property_1ae73e64ddeee0dc62640d3d4a090fa07d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; getAll</definition>
        <argsstring>()</argsstring>
        <name>getAll</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="81" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="218" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="classsbol_1_1_property_1a78345a10e37cae70b6b1f6e295034872" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void set</definition>
        <argsstring>(std::string new_value)</argsstring>
        <name>set</name>
        <reimplementedby refid="classsbol_1_1_referenced_object_1acaf5da8d7195921115a14068d914272d">set</reimplementedby>
        <param>
          <type>std::string</type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
<para>Basic setter for SBOL <ref refid="classsbol_1_1_text_property" kindref="compound">TextProperty</ref> and <ref refid="classsbol_1_1_u_r_i_property" kindref="compound">URIProperty</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_value</parametername>
</parameternamelist>
<parameterdescription>
<para>A new string value for the <ref refid="classsbol_1_1_property" kindref="compound">Property</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="82" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="277" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="classsbol_1_1_property_1a60d0f67ccdc9630d89f8bb041cc0f122" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void set</definition>
        <argsstring>(int new_value)</argsstring>
        <name>set</name>
        <param>
          <type>int</type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
<para>Basic setter for SBOL <ref refid="classsbol_1_1_int_property" kindref="compound">IntProperty</ref>, but can be used with <ref refid="classsbol_1_1_text_property" kindref="compound">TextProperty</ref> as well. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_value</parametername>
</parameternamelist>
<parameterdescription>
<para>A new integer value for the property, which is converted to a raw string during serialization. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="83" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="298" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="classsbol_1_1_property_1a3291234026df2ae0d53fe60422952384" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void add</definition>
        <argsstring>(std::string new_value)</argsstring>
        <name>add</name>
        <param>
          <type>std::string</type>
          <declname>new_value</declname>
        </param>
        <briefdescription>
<para>Appends the new value to a list of values, for properties that allow it. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>new_value</parametername>
</parameternamelist>
<parameterdescription>
<para>A new string which will be added to a list of values. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="84" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="362" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="classsbol_1_1_property_1ab31393d40ce20e4bbf0de65a874040d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void remove</definition>
        <argsstring>(int index=0)</argsstring>
        <name>remove</name>
        <reimplementedby refid="classsbol_1_1_owned_object_1a327eb5f38c67b9840719f2c1ed81f94e">remove</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1a327eb5f38c67b9840719f2c1ed81f94e">remove</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1a327eb5f38c67b9840719f2c1ed81f94e">remove</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1a327eb5f38c67b9840719f2c1ed81f94e">remove</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1a327eb5f38c67b9840719f2c1ed81f94e">remove</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1a327eb5f38c67b9840719f2c1ed81f94e">remove</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1a327eb5f38c67b9840719f2c1ed81f94e">remove</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1a327eb5f38c67b9840719f2c1ed81f94e">remove</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1a327eb5f38c67b9840719f2c1ed81f94e">remove</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1a327eb5f38c67b9840719f2c1ed81f94e">remove</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1a327eb5f38c67b9840719f2c1ed81f94e">remove</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1a327eb5f38c67b9840719f2c1ed81f94e">remove</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1a327eb5f38c67b9840719f2c1ed81f94e">remove</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1a327eb5f38c67b9840719f2c1ed81f94e">remove</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1a327eb5f38c67b9840719f2c1ed81f94e">remove</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1a327eb5f38c67b9840719f2c1ed81f94e">remove</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1a327eb5f38c67b9840719f2c1ed81f94e">remove</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1a327eb5f38c67b9840719f2c1ed81f94e">remove</reimplementedby>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="85" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="380" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="classsbol_1_1_property_1ac8bb3912a3ce86b15842e79d0b421204" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <reimplementedby refid="classsbol_1_1_owned_object_1aee7cb2065b88d21ac4ad05bc997ecf82">clear</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1aee7cb2065b88d21ac4ad05bc997ecf82">clear</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1aee7cb2065b88d21ac4ad05bc997ecf82">clear</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1aee7cb2065b88d21ac4ad05bc997ecf82">clear</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1aee7cb2065b88d21ac4ad05bc997ecf82">clear</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1aee7cb2065b88d21ac4ad05bc997ecf82">clear</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1aee7cb2065b88d21ac4ad05bc997ecf82">clear</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1aee7cb2065b88d21ac4ad05bc997ecf82">clear</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1aee7cb2065b88d21ac4ad05bc997ecf82">clear</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1aee7cb2065b88d21ac4ad05bc997ecf82">clear</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1aee7cb2065b88d21ac4ad05bc997ecf82">clear</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1aee7cb2065b88d21ac4ad05bc997ecf82">clear</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1aee7cb2065b88d21ac4ad05bc997ecf82">clear</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1aee7cb2065b88d21ac4ad05bc997ecf82">clear</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1aee7cb2065b88d21ac4ad05bc997ecf82">clear</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1aee7cb2065b88d21ac4ad05bc997ecf82">clear</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1aee7cb2065b88d21ac4ad05bc997ecf82">clear</reimplementedby>
        <reimplementedby refid="classsbol_1_1_owned_object_1aee7cb2065b88d21ac4ad05bc997ecf82">clear</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="86" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="317" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classsbol_1_1_property_1aac759501cf6c7895a70eecbef0226ae1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void write</definition>
        <argsstring>()</argsstring>
        <name>write</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="87" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="333" bodyend="342"/>
      </memberdef>
      <memberdef kind="function" id="classsbol_1_1_property_1af19ecb2e26889fcc5368c661b5fbdf98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void validate</definition>
        <argsstring>(void *arg=NULL)</argsstring>
        <name>validate</name>
        <param>
          <type>void *</type>
          <declname>arg</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="88" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="345" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="classsbol_1_1_property_1a3f759a6148161a88c97375716a176b4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string operator[]</definition>
        <argsstring>(const int nIndex)</argsstring>
        <name>operator[]</name>
        <param>
          <type>const int</type>
          <declname>nIndex</declname>
        </param>
        <briefdescription>
<para>Retrieve the indexed value in a list container. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>A numerical index </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="89" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="310" bodyend="314"/>
      </memberdef>
      <memberdef kind="function" id="classsbol_1_1_property_1ad69bd11391be1a1dba5c8202259664f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsbol_1_1_property_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="102" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="102" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classsbol_1_1_property_1acad38d52497a975bfb6f2f6acd76631f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classsbol_1_1_property_1_1iterator" kindref="compound">iterator</ref></type>
        <definition>iterator end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="108" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="108" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classsbol_1_1_property_1af4b57d21919c42d55af03391f91a1c08" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int size</definition>
        <argsstring>()</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="114" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="114" bodyend="124"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Member properties of all SBOL objects are defined using a <ref refid="classsbol_1_1_property" kindref="compound">Property</ref> object. </para>    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classsbol_1_1_property" kindref="compound">Property</ref> class provides a generic interface for accessing SBOL objects. At a low level, the <ref refid="classsbol_1_1_property" kindref="compound">Property</ref> class converts SBOL data structures into RDF triples. <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>SBOL specification currently supports string, URI, and integer literal values. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <collaborationgraph>
      <node id="606">
        <label>iterator</label>
        <link refid="classsbol_1_1_property_1_1iterator"/>
      </node>
      <node id="605">
        <label>Property&lt; std::string &gt;</label>
        <link refid="classsbol_1_1_property"/>
        <childnode refid="603" relation="usage">
          <edgelabel>#sbol_owner</edgelabel>
        </childnode>
        <childnode refid="606" relation="usage">
          <edgelabel>+python_iter</edgelabel>
        </childnode>
      </node>
      <node id="602">
        <label>Property&lt; LiteralType &gt;</label>
        <link refid="classsbol_1_1_property"/>
        <childnode refid="603" relation="usage">
          <edgelabel>#sbol_owner</edgelabel>
        </childnode>
        <childnode refid="606" relation="usage">
          <edgelabel>+python_iter</edgelabel>
        </childnode>
      </node>
      <node id="603">
        <label>SBOLObject</label>
        <link refid="classsbol_1_1_s_b_o_l_object"/>
        <childnode refid="604" relation="usage">
          <edgelabel>+identity</edgelabel>
        </childnode>
      </node>
      <node id="604">
        <label>URIProperty</label>
        <link refid="classsbol_1_1_u_r_i_property"/>
        <childnode refid="605" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/bryan/Dev/libSBOL/source/property.h" line="58" column="1" bodyfile="/Users/bryan/Dev/libSBOL/source/property.h" bodystart="57" bodyend="129"/>
    <listofallmembers>
      <member refid="classsbol_1_1_property_1a3291234026df2ae0d53fe60422952384" prot="public" virt="non-virtual"><scope>sbol::Property</scope><name>add</name></member>
      <member refid="classsbol_1_1_property_1ad69bd11391be1a1dba5c8202259664f8" prot="public" virt="non-virtual"><scope>sbol::Property</scope><name>begin</name></member>
      <member refid="classsbol_1_1_property_1ac8bb3912a3ce86b15842e79d0b421204" prot="public" virt="virtual"><scope>sbol::Property</scope><name>clear</name></member>
      <member refid="classsbol_1_1_property_1acad38d52497a975bfb6f2f6acd76631f" prot="public" virt="non-virtual"><scope>sbol::Property</scope><name>end</name></member>
      <member refid="classsbol_1_1_property_1ae73e64ddeee0dc62640d3d4a090fa07d" prot="public" virt="virtual"><scope>sbol::Property</scope><name>getAll</name></member>
      <member refid="classsbol_1_1_property_1a536f61dd346bda796d4b3fc116037490" prot="public" virt="virtual"><scope>sbol::Property</scope><name>getOwner</name></member>
      <member refid="classsbol_1_1_property_1aaeae46cf11cccb87655dc22526bacf3e" prot="public" virt="virtual"><scope>sbol::Property</scope><name>getTypeURI</name></member>
      <member refid="classsbol_1_1_property_1a8eabfd241d9b1e0acf2db965f872d64f" prot="protected" virt="non-virtual"><scope>sbol::Property</scope><name>initializeNamespace</name></member>
      <member refid="classsbol_1_1_property_1a3f759a6148161a88c97375716a176b4d" prot="public" virt="non-virtual"><scope>sbol::Property</scope><name>operator[]</name></member>
      <member refid="classsbol_1_1_property_1ad8f40b0d120f2c860386c286f2f598d4" prot="public" virt="non-virtual"><scope>sbol::Property</scope><name>Property</name></member>
      <member refid="classsbol_1_1_property_1a472abfcc949da4aa54ffd6b030ff2438" prot="public" virt="non-virtual"><scope>sbol::Property</scope><name>Property</name></member>
      <member refid="classsbol_1_1_property_1a0f46d656d5f53af3bf202e1b8756cd0a" prot="public" virt="non-virtual"><scope>sbol::Property</scope><name>Property</name></member>
      <member refid="classsbol_1_1_property_1a4fe7ea5f74433d397de3b2d5c0f145b9" prot="public" virt="non-virtual"><scope>sbol::Property</scope><name>python_iter</name></member>
      <member refid="classsbol_1_1_property_1ab31393d40ce20e4bbf0de65a874040d9" prot="public" virt="virtual"><scope>sbol::Property</scope><name>remove</name></member>
      <member refid="classsbol_1_1_property_1afd14d27b979a91307d8548061c1ed76b" prot="protected" virt="non-virtual"><scope>sbol::Property</scope><name>sbol_owner</name></member>
      <member refid="classsbol_1_1_property_1ae7eb33d1cf22577923b7872fad0d72a2" prot="private" virt="non-virtual"><scope>sbol::Property</scope><name>SBOLObject</name></member>
      <member refid="classsbol_1_1_property_1a78345a10e37cae70b6b1f6e295034872" prot="public" virt="virtual"><scope>sbol::Property</scope><name>set</name></member>
      <member refid="classsbol_1_1_property_1a60d0f67ccdc9630d89f8bb041cc0f122" prot="public" virt="virtual"><scope>sbol::Property</scope><name>set</name></member>
      <member refid="classsbol_1_1_property_1af4b57d21919c42d55af03391f91a1c08" prot="public" virt="non-virtual"><scope>sbol::Property</scope><name>size</name></member>
      <member refid="classsbol_1_1_property_1a905a73fd092fbf7ef93bba047e081418" prot="protected" virt="non-virtual"><scope>sbol::Property</scope><name>type</name></member>
      <member refid="classsbol_1_1_property_1af19ecb2e26889fcc5368c661b5fbdf98" prot="public" virt="non-virtual"><scope>sbol::Property</scope><name>validate</name></member>
      <member refid="classsbol_1_1_property_1a6f819250a5965723e1f8110140a7ddeb" prot="protected" virt="non-virtual"><scope>sbol::Property</scope><name>validationRules</name></member>
      <member refid="classsbol_1_1_property_1aac759501cf6c7895a70eecbef0226ae1" prot="public" virt="virtual"><scope>sbol::Property</scope><name>write</name></member>
      <member refid="classsbol_1_1_property_1aa22be1d5ed856a436d84b3d4b4cb5c8a" prot="public" virt="non-virtual"><scope>sbol::Property</scope><name>~Property</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
